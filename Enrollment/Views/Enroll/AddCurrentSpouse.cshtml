@model Enrollment.ViewModels.AddCurrentSpouseViewModel

@{
    ViewBag.Title = "Spouse Information";
}

<h2>Step 3: Marital Information</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Current Spouse</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Person.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Person.FirstName, new { htmlAttributes = new { @class = "form-control", @id = "FirstName" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Person.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Person.MiddleInitial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Person.MiddleInitial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Person.MiddleInitial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Person.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Person.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Person.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Person.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Person.BirthDate, new { htmlAttributes = new { @class = "form-control", @id = "BirthDate" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Person.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Person.SSN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Person.SSN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Person.SSN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Person.GenderID, "GenderID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PersonAddressViewModel.Person.GenderID, Model.PersonAddressViewModel.GenderList, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Person.GenderID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Person.HomePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Person.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Person.HomePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Person.CellPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Person.CellPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Person.CellPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Person.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Person.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Person.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="button" value="Copy" class="btn btn-default" id="Copy" />
            </div>
            <div class="col-md-2">
                <input type="button" value="Clear" class="btn btn-default" id="Clear" />
            </div>
            <div class="col-md-2">
                <input type="button" value="Domestic" class="btn btn-default" id="Domestic" />
            </div>
            <div class="col-md-2">
                <input type="button" value="International" class="btn btn-default" id="International" />
            </div>
        </div>

        @Html.HiddenFor(model => model.ParticipantAddress.Address1, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Address.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Address.Address1, new { htmlAttributes = new { @class = "form-control", @id = "NewAddress1" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Address.Address1, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.ParticipantAddress.Address2, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Address.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Address.Address2, new { htmlAttributes = new { @class = "form-control", @id = "NewAddress2" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Address.Address2, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.ParticipantAddress.City, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-group">
            @Html.LabelFor(model => model.PersonAddressViewModel.Address.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Address.City, new { htmlAttributes = new { @class = "form-control", @id = "NewCity" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Address.City, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.ParticipantAddress.StateID, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-group" id="State">
            @Html.LabelFor(model => model.PersonAddressViewModel.Address.State.StateID, "State", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PersonAddressViewModel.Address.State.StateID, Model.PersonAddressViewModel.StateList, htmlAttributes: new { @class = "form-control", @id = "NewStateID" })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Address.State.StateID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="Province">
            @Html.LabelFor(model => model.PersonAddressViewModel.Address.Province, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Address.Province, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Address.Province, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.ParticipantAddress.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-group" id="ZipCode">
            @Html.LabelFor(model => model.PersonAddressViewModel.Address.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Address.ZipCode, new { htmlAttributes = new { @class = "form-control", @id = "NewZipCode" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Address.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="PostalCode">
            @Html.LabelFor(model => model.PersonAddressViewModel.Address.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Address.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Address.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="Country">
            @Html.LabelFor(model => model.PersonAddressViewModel.Address.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonAddressViewModel.Address.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonAddressViewModel.Address.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MarriageDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MarriageDate, new { htmlAttributes = new { @class = "form-control", @id = "MarriageDate" } })
                @Html.ValidationMessageFor(model => model.MarriageDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsuranceCompany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InsuranceCompany, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsuranceCompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsurancePhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InsurancePhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsurancePhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsuranceID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InsuranceID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsuranceID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>

        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            if ($("#FirstName").val() == "") {
                $("#BirthDate").val("");
                $("#MarriageDate").val("");
            }
            $("#Province").hide();
            $("#PostalCode").hide();
            $("#Country").hide();
            $("#State").show();
            $("#ZipCode").show();
            $("#Domestic").click(function () {
                $("#Province").hide();
                $("#PostalCode").hide();
                $("#Country").hide();
                $("#State").show();
                $("#ZipCode").show();
            });
            $("#International").click(function () {
                $("#Province").show();
                $("#PostalCode").show();
                $("#Country").show();
                $("#State").hide();
                $("#ZipCode").hide();
            });
            $("#Copy").click(function () {
                $("#NewAddress1").val($("#ParticipantAddress_Address1").val());
                $("#NewAddress2").val($("#ParticipantAddress_Address2").val());
                $("#NewCity").val($("#ParticipantAddress_City").val());
                $("#NewStateID").val($("#ParticipantAddress_StateID").val());
                $("#NewZipCode").val($("#ParticipantAddress_ZipCode").val());
            });
            $("#Clear").click(function () {
                $("#NewAddress1").val("");
                $("#NewAddress2").val("");
                $("#NewCity").val("");
                $("#NewState").val("");
                $("#NewZipCode").val("");
            });
        });
    </script>
}
