@model Enrollment.ViewModels.AddCurrentEmployerViewModel

@{
    ViewBag.Title = "Current Employer Information";
}

<h2>Step 2: Employer Information</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Current Employer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmploymentInformation.EmploymentInformationID, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentInformation.EmployerID, "Employer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EmploymentInformation.EmployerID, Model.EmployerList, "", htmlAttributes: new { @class = "form-control", @id = "EmployerID" })
                @Html.ValidationMessageFor(model => model.EmploymentInformation.EmployerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentInformation.OccupationCodeID, "Occupation Code", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EmploymentInformation.OccupationCodeID, Model.OccupationCodeList, "", htmlAttributes: new { @class = "form-control", @id = "OccupationCodeList" })
                @Html.ValidationMessageFor(model => model.EmploymentInformation.OccupationCodeID, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentInformation.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmploymentInformation.HireDate, new { htmlAttributes = new { @class = "form-control", @id = "HireDate" } })
                @Html.ValidationMessageFor(model => model.EmploymentInformation.HireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentInformation.WorkStatusID, "Work Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EmploymentInformation.WorkStatusID, Model.WorkStatusList, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmploymentInformation.WorkStatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentInformation.WorkHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmploymentInformation.WorkHours, new { htmlAttributes = new { @class = "form-control", @id = "WorkHours" } })
                @Html.ValidationMessageFor(model => model.EmploymentInformation.WorkHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousPensionEmployers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PreviousPensionEmployers, new SelectList(new[] { new { Value = "true", Text = "Yes" }, new { Value = "false", Text = "No" }, }, "Value", "Text", Model), "", htmlAttributes: new { @class = "form-control", @id = "DropDown" })
                @Html.ValidationMessageFor(model => model.PreviousPensionEmployers, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        if ($("#WorkHours").val() == 0) {
            $("#DropDown").val("");
            $("#HireDate").val("");
            $("#WorkHours").val("");
        }
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#EmployerID").change(function () {
            $.ajax({
                type: "GET",
                url: "/Enroll/GetOccupationCodes?EmployerID=" + $("#EmployerID").val(),
                data: { OccupationCodeID: $(this).val() },
                success: function (data) {
                    var selected = $("#OccupationCodeList").val();
                    var found = false;
                    var markup = " ";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                        if (data[x].Value == selected) found = true;
                    }
                    $("#OccupationCodeList").html(markup).val(selected);
                },
                complete: function (data) {
            }
            })
        })
    });
</script>
}
