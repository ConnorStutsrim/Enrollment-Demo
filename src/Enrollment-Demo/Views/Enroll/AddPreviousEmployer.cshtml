@model Enrollment.ViewModels.AddPreviousEmployerViewModel

@{
    ViewBag.Title = "Previous Employer Information";
}

<h2>Step 2: Employer Information</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Previous Employer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmploymentInformation.EmploymentInformationID, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentInformation.EmployerID, "Employer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EmploymentInformation.EmployerID, Model.EmployerList, "", htmlAttributes: new { @class = "form-control", @id = "EmployerID" })
                @Html.ValidationMessageFor(model => model.EmploymentInformation.EmployerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentInformation.OccupationCodeID, "Occupation Code", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EmploymentInformation.OccupationCodeID, Model.OccupationCodeList, "", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmploymentInformation.OccupationCodeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentInformation.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmploymentInformation.HireDate, new { htmlAttributes = new { @class = "form-control", @id = "HireDate" } })
                @Html.ValidationMessageFor(model => model.EmploymentInformation.HireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmploymentInformation.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmploymentInformation.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmploymentInformation.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PreviousPensionEmployers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PreviousPensionEmployers, new SelectList(new[] { new { Value = "true", Text = "Yes" }, new { Value = "false", Text = "No" }, }, "Value", "Text", Model), "", htmlAttributes: new { @class = "form-control", @id = "PreviousPensionEmployers" })
                @Html.ValidationMessageFor(model => model.PreviousPensionEmployers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        if ($("#EmployerID").val() == 0) {
            $("#HireDate").val("");
            $("#PreviousPensionEmployers").val("");
        }
    });
</script>

}
